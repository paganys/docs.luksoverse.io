"use strict";(self.webpackChunkcommunity_docs=self.webpackChunkcommunity_docs||[]).push([[2880],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>d});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),p=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=p(n),d=r,k=m["".concat(i,".").concat(d)]||m[d]||c[d]||l;return n?a.createElement(k,o(o({ref:t},u),{},{components:n})):a.createElement(k,o({ref:t},u))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,o=new Array(l);o[0]=m;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var p=2;p<l;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3773:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>c,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const l={title:"System & Monitoring",sidebar_position:2},o="System & Monitoring Setup",s={unversionedId:"Community-Archive/system-monitoring-setup",id:"Community-Archive/system-monitoring-setup",title:"System & Monitoring",description:"Guide by Volodymyr Lykhonis",source:"@site/docs/Community-Archive/system-monitoring-setup.md",sourceDirName:"Community-Archive",slug:"/Community-Archive/system-monitoring-setup",permalink:"/docs/Community-Archive/system-monitoring-setup",draft:!1,editUrl:"https://github.com/Luksoverse/community-docs/tree/main/packages/create-docusaurus/templates/shared/docs/Community-Archive/system-monitoring-setup.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"System & Monitoring",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Johnny's Node Guide",permalink:"/docs/Community-Archive/johnny-ebd-node-guide"},next:{title:"Node Troubleshoot",permalink:"/docs/Community-Archive/node-troubleshoot"}},i={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"My Setup",id:"my-setup",level:3},{value:"Auto Start",id:"auto-start",level:4},{value:"System Setup",id:"system-setup",level:2},{value:"Update",id:"update",level:3},{value:"Remote Access",id:"remote-access",level:3},{value:"Install SSH",id:"install-ssh",level:4},{value:"Confiugre SSH",id:"confiugre-ssh",level:4},{value:"Configure Firewall",id:"configure-firewall",level:4},{value:"Enable SSH",id:"enable-ssh",level:4},{value:"Resolve Hostname",id:"resolve-hostname",level:4},{value:"Disable Password Authentication",id:"disable-password-authentication",level:4},{value:"Disable Non-Key Remote Access",id:"disable-non-key-remote-access",level:4},{value:"Verify Remote Access",id:"verify-remote-access",level:4},{value:"Keep System Up to Date",id:"keep-system-up-to-date",level:3},{value:"Disable Root Access",id:"disable-root-access",level:3},{value:"Block Unathorised Access",id:"block-unathorised-access",level:3},{value:"Configure Firewall",id:"configure-firewall-1",level:3},{value:"Improve SSH Connection",id:"improve-ssh-connection",level:3},{value:"Node Setup",id:"node-setup",level:2},{value:"Monitoring",id:"monitoring",level:2},{value:"Prometheus",id:"prometheus",level:3},{value:"Configure",id:"configure",level:4},{value:"Configure Service",id:"configure-service",level:4},{value:"Grafana",id:"grafana",level:3},{value:"Configure Service",id:"configure-service-1",level:4},{value:"Configure Dashboard",id:"configure-dashboard",level:4},{value:"Data Source",id:"data-source",level:5},{value:"Install Dashboard",id:"install-dashboard",level:5},{value:"Enable Alerts",id:"enable-alerts",level:5},{value:"Node Exporter",id:"node-exporter",level:3},{value:"Configure Service",id:"configure-service-2",level:4},{value:"Json Exporter",id:"json-exporter",level:3},{value:"Prerequisites",id:"prerequisites-1",level:4},{value:"Build and Install",id:"build-and-install",level:4},{value:"Configure",id:"configure-1",level:4},{value:"Configure Service",id:"configure-service-3",level:4},{value:"Ping",id:"ping",level:3},{value:"Configure",id:"configure-2",level:4},{value:"Configure Service",id:"configure-service-4",level:4},{value:"Credits",id:"credits",level:2}],u={toc:p};function c(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"system--monitoring-setup"},"System & Monitoring Setup"),(0,r.kt)("p",null,"Guide by ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/lykhonis"},"Volodymyr Lykhonis")),(0,r.kt)("p",null,"This is a guide to setup a Lukso validator node in home environment. The guide suggests a use of a dedicated machine to run a node with validators, separate from a personal working machine."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"NOTE:"))," Most of the steps require working in a terminal")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#prerequisites"},"Prerequisites"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#my-setup"},"My Setup"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#auto-start"},"Auto Start")))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#system-setup"},"System Setup"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#update"},"Update")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#remote-access"},"Remote Access"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#install-ssh"},"Install SSH")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#configure-ssh"},"Configure SSH")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#configure-firewall"},"Configure Firewall")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#enable-ssh"},"Enable SSH")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#resolve-hostname"},"Resolve Hostname")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#disable-password-authentication"},"Disable Password Authentication")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#disable-non-key-remote-access"},"Disable Non-Key Remote Access")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#verify-remote-access"},"Verify Remote Access")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#keep-system-up-to-date"},"Keep System Up to Date")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#disable-root-access"},"Disable Root Access")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#block-unathorised-access"},"Block Unathorised Access")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#configure-firewall"},"Configure Firewall")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#improve-ssh-connection"},"Improve SSH Connection")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#node-setup"},"Node Setup")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#monitoring"},"Monitoring"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#prometheus"},"Prometheus"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#configure"},"Configure")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#configure-service"},"Configure Service")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#grafana"},"Grafana"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#configure-service-1"},"Configure Service")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#configure-dashboard"},"Configure Dashboard"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#data-source"},"Data Source")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#install-dashboard"},"Install Dashboard")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#enable-alerts"},"Enable Alerts")))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#node-exporter"},"Node Exporter"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#configure-service-2"},"Configure Service")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#json-exporter"},"Json Exporter"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#prerequisites-1"},"Prerequisites")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#build-and-install"},"Build and Install")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#configure-1"},"Configure")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#configure-service-3"},"Configure Service")))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#ping"},"Ping"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#configure-2"},"Configure")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#configure-service-4"},"Configure Service")))))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"#credits"},"Credits"))),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://ubuntu.com/"},"Ubuntu")),(0,r.kt)("li",{parentName:"ul"},"Dedicated PC")),(0,r.kt)("h3",{id:"my-setup"},"My Setup"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Ubuntu 20.04.4 LTS"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.amazon.com/dp/B083GH1SSN/ref=cm_sw_r_cp_api_glt_i_PAVWC2JD4QTRSVHFFX10?_encoding=UTF8&psc=1"},"Intel NUC 10 Performance Kit \u2013 Intel Core i5")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.amazon.com/dp/B083VWCZLQ/ref=cm_sw_r_cp_api_glt_i_1YV0G8K4GAH0NYP6BN00?_encoding=UTF8&psc=1"},"Memory Kit 16GB (8GBx2)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://www.amazon.com/dp/B07MFZY2F2/ref=cm_sw_r_cp_api_glt_i_XF7ZS3XYJCQM5PH05P7V?_encoding=UTF8&psc=1"},"Samsung 970 EVO Plus SSD 1TB"))),(0,r.kt)("p",null,"I've spent around $850. Current price seem to be less around $700. I connected my NUC with ethernet cable directly into my router."),(0,r.kt)("h4",{id:"auto-start"},"Auto Start"),(0,r.kt)("p",null,"I had to manually change BIOS settings of NUC to ensure if power gets reset, NUC auto starts. A simple test is unplug and plug power cord back in."),(0,r.kt)("p",null,"For NUC I followed following steps:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Press F2 during boot to enter BIOS setup"),(0,r.kt)("li",{parentName:"ol"},"Go to ",(0,r.kt)("inlineCode",{parentName:"li"},"Power")," -> ",(0,r.kt)("inlineCode",{parentName:"li"},"Secondary Power Settings")," menu"),(0,r.kt)("li",{parentName:"ol"},"Set the option for ",(0,r.kt)("inlineCode",{parentName:"li"},"After Power Failure")," to ",(0,r.kt)("inlineCode",{parentName:"li"},"Power One")),(0,r.kt)("li",{parentName:"ol"},"Press F10 to save changes and exit BIOS")),(0,r.kt)("h2",{id:"system-setup"},"System Setup"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"NOTE:"))," Following steps are performed directly on a node machine.")),(0,r.kt)("p",null,"In order to remotelly access a machine running a node, it needs to be configured."),(0,r.kt)("h3",{id:"update"},"Update"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo apt update\nsudo apt upgrade -y\nsudo apt install -y nano wget make git\n")),(0,r.kt)("h3",{id:"remote-access"},"Remote Access"),(0,r.kt)("p",null,"SSH is used to enable remote access from other machine using localy network through WiFi or broadband connections. This is a common practice and can be quite useful if a node machine does not have input (keyboard/mouse) nor a display. Once setup, a node machine can be placed elsewhere and only personal computer could be used to control and maintain it."),(0,r.kt)("h4",{id:"install-ssh"},"Install SSH"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo apt install --assume-yes openssh-server\n")),(0,r.kt)("h4",{id:"confiugre-ssh"},"Confiugre SSH"),(0,r.kt)("p",null,"Choose a port number larger than ",(0,r.kt)("inlineCode",{parentName:"p"},"50000"),". This will be used later."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo nano /etc/ssh/sshd_config\n")),(0,r.kt)("p",null,"Change and enable a port by uncommenting (removing ",(0,r.kt)("inlineCode",{parentName:"p"},"#"),") and changing ",(0,r.kt)("inlineCode",{parentName:"p"},"22")," to new chosen port number:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"Port 50000\n")),(0,r.kt)("p",null,"Save and close editor by pressing ",(0,r.kt)("inlineCode",{parentName:"p"},"SHIFT")," + ",(0,r.kt)("inlineCode",{parentName:"p"},":"),", then type ",(0,r.kt)("inlineCode",{parentName:"p"},"wq"),", and hit enter."),(0,r.kt)("h4",{id:"configure-firewall"},"Configure Firewall"),(0,r.kt)("p",null,"Enable ssh in firewall by replacing ",(0,r.kt)("em",{parentName:"p"},"replace-port")," with new port:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo ufw allow replace-port\n")),(0,r.kt)("h4",{id:"enable-ssh"},"Enable SSH"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo systemctl start ssh\nsudo systemctl enable ssh\n")),(0,r.kt)("h4",{id:"resolve-hostname"},"Resolve Hostname"),(0,r.kt)("p",null,"In order to locate a node machine in local network, it requires IP. Execute following command to resolve a node machine's IP:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"ifconfig\n")),(0,r.kt)("p",null,"Locate IP address (",(0,r.kt)("inlineCode",{parentName:"p"},"inet"),") in ",(0,r.kt)("inlineCode",{parentName:"p"},"eno1")," section, e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"192.168.86.29"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"eno1: flags=4163<UP,BROADCAST,RUNNING,MULTICAST>  mtu 1500\n      inet 192.168.86.29  netmask 255.255.255.0  broadcast 192.168.86.255\n")),(0,r.kt)("p",null,"Close ssh session by executing ",(0,r.kt)("inlineCode",{parentName:"p"},"exit"),"."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"NOTE:"))," Following steps are performed a personal computer.")),(0,r.kt)("p",null,"Verify basic access to a node machine by using ssh. SSH requires user name of a node machine, its hostname and previously chosen ssh port."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"nano ~/.ssh/config\n")),(0,r.kt)("p",null,"Type in the following and replace ",(0,r.kt)("em",{parentName:"p"},"replace-user"),", ",(0,r.kt)("em",{parentName:"p"},"replace-ip"),", and ",(0,r.kt)("em",{parentName:"p"},"replace-port"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"Host lukso\n  User replace-user\n  HostName replace-ip\n  Port replace-port\n")),(0,r.kt)("p",null,"Attempt to connect to verify the configuration:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"ssh lukso\n")),(0,r.kt)("p",null,"Once connected, enter a password of user on a node machine. If a connection was okay, a shell should be presented in a terminal. At this point, it could closed."),(0,r.kt)("h4",{id:"disable-password-authentication"},"Disable Password Authentication"),(0,r.kt)("p",null,"On a personal computer, create new key pair for ssh authentication if needed."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"ssh-keygen -t rsa -b 4096\n")),(0,r.kt)("p",null,"Copy a generated public key ",(0,r.kt)("strong",{parentName:"p"},"keyname.pub")," to a node machine. Replace ",(0,r.kt)("strong",{parentName:"p"},"keyname.pub")," with a key in home directory."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"ssh-copy-id -i ~/.ssh/keyname.pub lukso\n")),(0,r.kt)("h4",{id:"disable-non-key-remote-access"},"Disable Non-Key Remote Access"),(0,r.kt)("p",null,"On a personal computer, try to ssh again. This time it should not prompt for a password."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"ssh lukso\n")),(0,r.kt)("p",null,"Configure SSH by opening a configuration file and modifying several options:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo nano /etc/ssh/sshd_config\n")),(0,r.kt)("p",null,"Options:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"ChallengeResponseAuthentication no\nPasswordAuthentication no\nPermitRootLogin prohibit-password\nPermitEmptyPasswords no\n")),(0,r.kt)("p",null,"Save and close editor by pressing ",(0,r.kt)("inlineCode",{parentName:"p"},"SHIFT")," + ",(0,r.kt)("inlineCode",{parentName:"p"},":"),", then type ",(0,r.kt)("inlineCode",{parentName:"p"},"wq"),", and hit enter. Validate SSH configuration and restart ssh service."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo sshd -t\nsudo systemctl restart sshd\n")),(0,r.kt)("p",null,"Close ssh session by executing ",(0,r.kt)("inlineCode",{parentName:"p"},"exit"),"."),(0,r.kt)("h4",{id:"verify-remote-access"},"Verify Remote Access"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"ssh lukso\n")),(0,r.kt)("p",null,"Stay connected to a remote node machine to perform next steps."),(0,r.kt)("h3",{id:"keep-system-up-to-date"},"Keep System Up to Date"),(0,r.kt)("p",null,"Update a system manually:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo apt-get update -y\nsudo apt dist-upgrade -y\nsudo apt-get autoremove\nsudo apt-get autoclean\n")),(0,r.kt)("p",null,"Keep a system up to date automatically:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo apt-get install unattended-upgrades\nsudo dpkg-reconfigure -plow unattended-upgrades\n")),(0,r.kt)("h3",{id:"disable-root-access"},"Disable Root Access"),(0,r.kt)("p",null,"A root access should not be used. Instead, a user should be using ",(0,r.kt)("inlineCode",{parentName:"p"},"sudo")," to perform privilged operations on a system."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo passwd -l root\n")),(0,r.kt)("h3",{id:"block-unathorised-access"},"Block Unathorised Access"),(0,r.kt)("p",null,"Install ",(0,r.kt)("inlineCode",{parentName:"p"},"fail2ban")," to block IP addresses that exceed failed ssh login attempts."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo apt-get install fail2ban -y\n")),(0,r.kt)("p",null,"Edit a config to monitor ssh logins"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo nano /etc/fail2ban/jail.local\n")),(0,r.kt)("p",null,"Replace ",(0,r.kt)("em",{parentName:"p"},"replace-port")," to match the ssh port number."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"[sshd]\nenabled=true\nport=replace-port\nfilter=sshd\nlogpath=/var/log/auth.log\nmaxretry=3\nignoreip=\n")),(0,r.kt)("p",null,"Save and close editor by pressing ",(0,r.kt)("inlineCode",{parentName:"p"},"SHIFT")," + ",(0,r.kt)("inlineCode",{parentName:"p"},":"),", then type ",(0,r.kt)("inlineCode",{parentName:"p"},"wq"),", and hit enter. Restart ",(0,r.kt)("inlineCode",{parentName:"p"},"fail2ban")," service:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo systemctl restart fail2ban\n")),(0,r.kt)("h3",{id:"configure-firewall-1"},"Configure Firewall"),(0,r.kt)("p",null,"By default deny all traffic:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo ufw default deny incoming\nsudo ufw default allow outgoing\n")),(0,r.kt)("p",null,"Allow P2P ports for Lukso clients:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo ufw allow 30303/tcp\nsudo ufw allow 13000/tcp\nsudo ufw allow 12000/udp\nsudo ufw allow 30303/udp\n")),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"NOTE:"))," make sure to open same ports on your home router")),(0,r.kt)("p",null,"Enable Firewall:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo ufw enable\n")),(0,r.kt)("p",null,"Verify firewall configuration:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo ufw status\n")),(0,r.kt)("p",null,"It should look something like this (may be missing some ports):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"Status: active\n\nTo                         Action      From\n--                         ------      ----\n13000/tcp                  ALLOW       Anywhere\n12000/udp                  ALLOW       Anywhere\n30303/tcp                  ALLOW       Anywhere\nssh-port/tcp               ALLOW       Anywhere\n30303/udp                  ALLOW       Anywhere\n13000/tcp (v6)             ALLOW       Anywhere (v6)\n12000/udp (v6)             ALLOW       Anywhere (v6)\n30303/tcp (v6)             ALLOW       Anywhere (v6)\nssh-port/tcp (v6)          ALLOW       Anywhere (v6)\n30303/udp (v6)             ALLOW       Anywhere (v6)\n")),(0,r.kt)("h3",{id:"improve-ssh-connection"},"Improve SSH Connection"),(0,r.kt)("p",null,"While setting up a system, ssh terminal may seem to be slow due wifi power management settings on a node machine. To disable it, modify a config."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo nano /etc/NetworkManager/conf.d/default-wifi-powersave-on.conf\n")),(0,r.kt)("p",null,"Config:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"[connection]\nwifi.powersave = 2\n")),(0,r.kt)("p",null,"Save and close editor by pressing ",(0,r.kt)("inlineCode",{parentName:"p"},"SHIFT")," + ",(0,r.kt)("inlineCode",{parentName:"p"},":"),", then type ",(0,r.kt)("inlineCode",{parentName:"p"},"wq"),", and hit enter. Restart ",(0,r.kt)("inlineCode",{parentName:"p"},"NetworkManager")," service:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo systemctl restart NetworkManager\n")),(0,r.kt)("h2",{id:"node-setup"},"Node Setup"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"NOTE:"))," Following steps are performed on personal machine.")),(0,r.kt)("p",null,"Access a remote node machine"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"ssh lukso\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"TBD AS LUKSO IS PREPEARING FOR L16 TESTNET"),".\nIn the meantime follow developments and instructions of ",(0,r.kt)("a",{parentName:"p",href:"https://docs.lukso.tech/networks/l16-testnet"},"L16 beta"),"."),(0,r.kt)("h2",{id:"monitoring"},"Monitoring"),(0,r.kt)("p",null,"Sets up a dashboard to monitor state of a node machine, node, and validators."),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"NOTE:"))," Following steps are performed on personal machine.")),(0,r.kt)("p",null,"Access a remote node machine"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"ssh lukso\n")),(0,r.kt)("h3",{id:"prometheus"},"Prometheus"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo adduser --system prometheus --group --no-create-home\n")),(0,r.kt)("p",null,"Identify latest version for ",(0,r.kt)("inlineCode",{parentName:"p"},"linux-amd64")," ",(0,r.kt)("a",{parentName:"p",href:"https://prometheus.io/download/"},"here"),", e.g. ",(0,r.kt)("inlineCode",{parentName:"p"},"2.34.0"),". Install prometheus by replacing ",(0,r.kt)("inlineCode",{parentName:"p"},"{VERSION}")," in the following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"cd\nwget https://github.com/prometheus/prometheus/releases/download/v{VERSION}/prometheus-{VERSION}.linux-amd64.tar.gz\ntar xzvf prometheus-{VERSION}.linux-amd64.tar.gz\ncd prometheus-{VERSION}.linux-amd64\nsudo cp promtool /usr/local/bin/\nsudo cp prometheus /usr/local/bin/\nsudo chown root:root /usr/local/bin/promtool /usr/local/bin/prometheus\nsudo chmod 755 /usr/local/bin/promtool /usr/local/bin/prometheus\ncd\nrm prometheus-{VERSION}.linux-amd64.tar.gz\nrm -rf prometheus-{VERSION}.linux-amd64\n")),(0,r.kt)("h4",{id:"configure"},"Configure"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo mkdir -p /etc/prometheus/console_libraries /etc/prometheus/consoles /etc/prometheus/files_sd /etc/prometheus/rules /etc/prometheus/rules.d\n")),(0,r.kt)("p",null,"Edit configuration file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo nano /etc/prometheus/prometheus.yml\n")),(0,r.kt)("p",null,"The content of configuration file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"global:\n  scrape_interval: 15s\n  evaluation_interval: 15s\n\nscrape_configs:\n  - job_name: 'prometheus'\n    scrape_interval: 5s\n    static_configs:\n      - targets: ['127.0.0.1:9090']\n  - job_name: 'beacon node'\n    scrape_interval: 5s\n    static_configs:\n      - targets: ['127.0.0.1:8080']\n  - job_name: 'node_exporter'\n    scrape_interval: 5s\n    static_configs:\n      - targets: ['127.0.0.1:9100']\n  - job_name: 'validator'\n    scrape_interval: 5s\n    static_configs:\n      - targets: ['127.0.0.1:8081']\n  - job_name: 'ping_google'\n    metrics_path: /probe\n    params:\n      module: [icmp]\n    static_configs:\n      - targets:\n        - 8.8.8.8\n    relabel_configs:\n      - source_labels: [__address__]\n        target_label: __param_target\n      - source_labels: [__param_target]\n        target_label: instance\n      - target_label: __address__\n        replacement: 127.0.0.1:9115  # The blackbox exporter's real hostname:port.\n  - job_name: 'ping_cloudflare'\n    metrics_path: /probe\n    params:\n      module: [icmp]\n    static_configs:\n      - targets:\n        - 1.1.1.1\n    relabel_configs:\n      - source_labels: [__address__]\n        target_label: __param_target\n      - source_labels: [__param_target]\n        target_label: instance\n      - target_label: __address__\n        replacement: 127.0.0.1:9115  # The blackbox exporter's real hostname:port.\n  - job_name: json_exporter\n    static_configs:\n    - targets:\n      - 127.0.0.1:7979\n  - job_name: json\n    metrics_path: /probe\n    static_configs:\n    - targets:\n      - https://api.coingecko.com/api/v3/simple/price?ids=lukso-token&vs_currencies=usd\n    relabel_configs:\n    - source_labels: [__address__]\n      target_label: __param_target\n    - source_labels: [__param_target]\n      target_label: instance\n    - target_label: __address__\n      replacement: 127.0.0.1:7979\n")),(0,r.kt)("p",null,"Prepare data directory for prometheus:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo chown -R prometheus:prometheus /etc/prometheus\nsudo mkdir /var/lib/prometheus\nsudo chown prometheus:prometheus /var/lib/prometheus\nsudo chmod 755 /var/lib/prometheus\n")),(0,r.kt)("p",null,"Open port to access to metrics. This is optional, only for external use:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo ufw allow 9090/tcp\n")),(0,r.kt)("h4",{id:"configure-service"},"Configure Service"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo nano /etc/systemd/system/prometheus.service\n")),(0,r.kt)("p",null,"The content of service configuration file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[Unit]\nDescription=Prometheus\nWants=network-online.target\nAfter=network-online.target\n\n[Service]\nUser=prometheus\nGroup=prometheus\nType=simple\nRestart=always\nRestartSec=5\nExecStart=/usr/local/bin/prometheus \\\n    --config.file /etc/prometheus/prometheus.yml \\\n    --storage.tsdb.path /var/lib/prometheus/ \\\n    --storage.tsdb.retention.time=31d \\\n    --web.console.templates=/etc/prometheus/consoles \\\n    --web.console.libraries=/etc/prometheus/console_libraries\nExecReload=/bin/kill -HUP $MAINPID\n\n[Install]\nWantedBy=multi-user.target\n")),(0,r.kt)("p",null,"Enable service:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo systemctl daemon-reload\nsudo systemctl start prometheus\nsudo systemctl enable prometheus\n")),(0,r.kt)("h3",{id:"grafana"},"Grafana"),(0,r.kt)("p",null,"Install:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},'cd\nsudo apt-get install -y apt-transport-https\nsudo apt-get install -y software-properties-common wget\nwget -q -O - https://packages.grafana.com/gpg.key | sudo apt-key add -\nsudo add-apt-repository "deb https://packages.grafana.com/oss/deb stable main"\nsudo apt-get update\nsudo apt-get install grafana-enterprise\n')),(0,r.kt)("h4",{id:"configure-service-1"},"Configure Service"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo nano /lib/systemd/system/grafana-server.service\n")),(0,r.kt)("p",null,"The content of service configuration file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[Unit]\nDescription=Grafana instance\nDocumentation=http://docs.grafana.org\nWants=network-online.target\nAfter=network-online.target\nAfter=postgresql.service mariadb.service mysql.service\n\n[Service]\nEnvironmentFile=/etc/default/grafana-server\nUser=grafana\nGroup=grafana\nType=simple\nRestart=on-failure\nWorkingDirectory=/usr/share/grafana\nRuntimeDirectory=grafana\nRuntimeDirectoryMode=0750\nExecStart=/usr/sbin/grafana-server \\\n                            --config=${CONF_FILE} \\\n                            --pidfile=${PID_FILE_DIR}/grafana-server.pid \\\n                            --packaging=deb \\\n                            cfg:default.paths.logs=${LOG_DIR} \\\n                            cfg:default.paths.data=${DATA_DIR} \\\n                            cfg:default.paths.plugins=${PLUGINS_DIR} \\\n                            cfg:default.paths.provisioning=${PROVISIONING_CFG_DIR}\n\n\nLimitNOFILE=10000\nTimeoutStopSec=20\nCapabilityBoundingSet=\nDeviceAllow=\nLockPersonality=true\nMemoryDenyWriteExecute=false\nNoNewPrivileges=true\nPrivateDevices=true\nPrivateTmp=true\nPrivateUsers=true\nProtectClock=true\nProtectControlGroups=true\nProtectHome=true\nProtectHostname=true\nProtectKernelLogs=true\nProtectKernelModules=true\nProtectKernelTunables=true\nProtectProc=invisible\nProtectSystem=full\nRemoveIPC=true\nRestrictAddressFamilies=AF_INET AF_INET6 AF_UNIX\nRestrictNamespaces=true\nRestrictRealtime=true\nRestrictSUIDSGID=true\nSystemCallArchitectures=native\nUMask=0027\n\n[Install]\nAlias=grafana.service\nWantedBy=multi-user.target\n")),(0,r.kt)("p",null,"Enable service:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo systemctl daemon-reload\nsudo systemctl start grafana-server\nsudo systemctl enable grafana-server\n")),(0,r.kt)("p",null,"Open port to access to metrics. This is optional, only for external use:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo ufw allow 3000/tcp\n")),(0,r.kt)("h4",{id:"configure-dashboard"},"Configure Dashboard"),(0,r.kt)("p",null,"Login to grafana by navigating to webrowser ",(0,r.kt)("inlineCode",{parentName:"p"},"http://192.168.86.29:3000"),". Replace ",(0,r.kt)("inlineCode",{parentName:"p"},"192.168.86.29")," with IP of your node machine. This is same IP used to ssh."),(0,r.kt)("p",null,"Default credentials are username and password ",(0,r.kt)("inlineCode",{parentName:"p"},"admin"),". Set a new secure (long) password when prompted by grafana."),(0,r.kt)("h5",{id:"data-source"},"Data Source"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"On the left-hand menu, hover over the gear menu and click on ",(0,r.kt)("inlineCode",{parentName:"li"},"Data Sources")),(0,r.kt)("li",{parentName:"ol"},"Then click on the Add Data Source button"),(0,r.kt)("li",{parentName:"ol"},"Hover over the Prometheus card on screen, then click on the Select button"),(0,r.kt)("li",{parentName:"ol"},"Enter ",(0,r.kt)("a",{parentName:"li",href:"http://127.0.0.1:9090/"},"http://127.0.0.1:9090/")," into the URL field, then click Save & Test")),(0,r.kt)("h5",{id:"install-dashboard"},"Install Dashboard"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Hover over the plus symbol icon in the left-hand menu, then click on Import"),(0,r.kt)("li",{parentName:"ol"},"Copy and paste ",(0,r.kt)("a",{parentName:"li",href:"https://github.com/Luksoverse/lukso-node-guide/blob/main/grafana/dashboard.json"},"the dashboard")," into the ",(0,r.kt)("inlineCode",{parentName:"li"},"Import via panel json")," text box on the screen"),(0,r.kt)("li",{parentName:"ol"},"Then click the Load button"),(0,r.kt)("li",{parentName:"ol"},"Then click the Import button")),(0,r.kt)("h5",{id:"enable-alerts"},"Enable Alerts"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"On the left-hand menu, hover over the alarm menue and click on ",(0,r.kt)("inlineCode",{parentName:"li"},"Notification channels")),(0,r.kt)("li",{parentName:"ol"},"Click on ",(0,r.kt)("inlineCode",{parentName:"li"},"New channel")),(0,r.kt)("li",{parentName:"ol"},"Select ",(0,r.kt)("inlineCode",{parentName:"li"},"Type")," and ",(0,r.kt)("a",{parentName:"li",href:"https://grafana.com/docs/grafana/latest/alerting/old-alerting/notifications/"},"configure"))),(0,r.kt)("p",null,"On lukso dashboard:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Scroll down on a dashboard to ",(0,r.kt)("inlineCode",{parentName:"li"},"Alerts")," section"),(0,r.kt)("li",{parentName:"ol"},"Select each alert and click ",(0,r.kt)("inlineCode",{parentName:"li"},"Edit")),(0,r.kt)("li",{parentName:"ol"},"In ",(0,r.kt)("inlineCode",{parentName:"li"},"Alert")," tab, select notifications ",(0,r.kt)("inlineCode",{parentName:"li"},"send to")),(0,r.kt)("li",{parentName:"ol"},"Save and repeat for each alert")),(0,r.kt)("h3",{id:"node-exporter"},"Node Exporter"),(0,r.kt)("p",null,"Monitors node stats:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo adduser --system node_exporter --group --no-create-home\n")),(0,r.kt)("p",null,"Install:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"cd\nwget https://github.com/prometheus/node_exporter/releases/download/v1.0.1/node_exporter-1.0.1.linux-amd64.tar.gz\ntar xzvf node_exporter-1.0.1.linux-amd64.tar.gz\nsudo cp node_exporter-1.0.1.linux-amd64/node_exporter /usr/local/bin/\nsudo chown node_exporter:node_exporter /usr/local/bin/node_exporter\nrm node_exporter-1.0.1.linux-amd64.tar.gz\nrm -rf node_exporter-1.0.1.linux-amd64\n")),(0,r.kt)("h4",{id:"configure-service-2"},"Configure Service"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo nano /etc/systemd/system/node_exporter.service\n")),(0,r.kt)("p",null,"The content of service configuration file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[Unit]\nDescription=Node Exporter\n\n[Service]\nType=simple\nRestart=always\nRestartSec=5\nUser=node_exporter\nExecStart=/usr/local/bin/node_exporter\n\n[Install]\nWantedBy=multi-user.target\n")),(0,r.kt)("p",null,"Enable service:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo systemctl daemon-reload\nsudo systemctl start node_exporter\nsudo systemctl enable node_exporter\n")),(0,r.kt)("h3",{id:"json-exporter"},"Json Exporter"),(0,r.kt)("h4",{id:"prerequisites-1"},"Prerequisites"),(0,r.kt)("p",null,"Check ",(0,r.kt)("inlineCode",{parentName:"p"},"go")," version if installed:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"go version\n")),(0,r.kt)("p",null,"If it is less than ",(0,r.kt)("inlineCode",{parentName:"p"},"1.20.3")," please install following:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"wget https://dl.google.com/go/go1.20.3.linux-amd64.tar.gz\nsudo tar -xvf go1.20.3.linux-amd64.tar.gz\nrm go1.20.3.linux-amd64.tar.gz\nsudo mv go /usr/local/go-1.20.3\nsudo ln -sf /usr/local/go-1.20.3/bin/go /usr/bin/go\ngo version\n")),(0,r.kt)("h4",{id:"build-and-install"},"Build and Install"),(0,r.kt)("p",null,"User:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo adduser --system json_exporter --group --no-create-home\n")),(0,r.kt)("p",null,"Install:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"cd\ngit clone https://github.com/prometheus-community/json_exporter.git\ncd json_exporter\nmake build\nsudo cp json_exporter /usr/local/bin/\nsudo chown json_exporter:json_exporter /usr/local/bin/json_exporter\ncd\nrm -rf json_exporter\n")),(0,r.kt)("h4",{id:"configure-1"},"Configure"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo mkdir /etc/json_exporter\nsudo chown json_exporter:json_exporter /etc/json_exporter\n")),(0,r.kt)("p",null,"Setup ",(0,r.kt)("inlineCode",{parentName:"p"},"LYX")," token price:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo nano /etc/json_exporter/json_exporter.yml\n")),(0,r.kt)("p",null,"The content of configuration file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},'metrics:\n- name: lyxusd\n  path: "{.lukso-token.usd}"\n  help: Lukso (LYX) price in USD\n')),(0,r.kt)("p",null,"Change ownership of configuration file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo chown json_exporter:json_exporter /etc/json_exporter/json_exporter.yml\n")),(0,r.kt)("h4",{id:"configure-service-3"},"Configure Service"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo nano /etc/systemd/system/json_exporter.service\n")),(0,r.kt)("p",null,"The content of service configuration file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[Unit]\nDescription=JSON Exporter\n\n[Service]\nType=simple\nRestart=always\nRestartSec=5\nUser=json_exporter\nExecStart=/usr/local/bin/json_exporter --config.file /etc/json_exporter/json_exporter.yml\n\n[Install]\nWantedBy=multi-user.target\n")),(0,r.kt)("p",null,"Enable service:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo systemctl daemon-reload\nsudo systemctl start json_exporter\nsudo systemctl enable json_exporter\n")),(0,r.kt)("h3",{id:"ping"},"Ping"),(0,r.kt)("p",null,"Pings google and cloudflare to track latency. This is optional."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo adduser --system blackbox_exporter --group --no-create-home\n")),(0,r.kt)("p",null,"Install:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"cd\nwget https://github.com/prometheus/blackbox_exporter/releases/download/v0.18.0/blackbox_exporter-0.18.0.linux-amd64.tar.gz\ntar xvzf blackbox_exporter-0.18.0.linux-amd64.tar.gz\nsudo cp blackbox_exporter-0.18.0.linux-amd64/blackbox_exporter /usr/local/bin/\nsudo chown blackbox_exporter:blackbox_exporter /usr/local/bin/blackbox_exporter\nsudo chmod 755 /usr/local/bin/blackbox_exporter\nrm blackbox_exporter-0.18.0.linux-amd64.tar.gz\nrm -rf blackbox_exporter-0.18.0.linux-amd64\n")),(0,r.kt)("p",null,"Enable ping permissions:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo setcap cap_net_raw+ep /usr/local/bin/blackbox_exporter\n")),(0,r.kt)("h4",{id:"configure-2"},"Configure"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo mkdir /etc/blackbox_exporter\nsudo chown blackbox_exporter:blackbox_exporter /etc/blackbox_exporter\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo nano /etc/blackbox_exporter/blackbox.yml\n")),(0,r.kt)("p",null,"The content of configuration file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"modules:\n        icmp:\n                prober: icmp\n                timeout: 10s\n                icmp:\n                        preferred_ip_protocol: ipv4\n")),(0,r.kt)("p",null,"Change ownership of configuration file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo chown blackbox_exporter:blackbox_exporter /etc/blackbox_exporter/blackbox.yml\n")),(0,r.kt)("h4",{id:"configure-service-4"},"Configure Service"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo nano /etc/systemd/system/blackbox_exporter.service\n")),(0,r.kt)("p",null,"The content of service configuration file:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"[Unit]\nDescription=Blackbox Exporter\n\n[Service]\nType=simple\nRestart=always\nRestartSec=5\nUser=blackbox_exporter\nExecStart=/usr/local/bin/blackbox_exporter --config.file /etc/blackbox_exporter/blackbox.yml\n\n[Install]\nWantedBy=multi-user.target\n")),(0,r.kt)("p",null,"Enable service:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-shell="},"sudo systemctl daemon-reload\nsudo systemctl start blackbox_exporter\nsudo systemctl enable blackbox_exporter\n")),(0,r.kt)("h2",{id:"credits"},"Credits"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/metanull-operator/eth2-ubuntu"},"https://github.com/metanull-operator/eth2-ubuntu"))))}c.isMDXComponent=!0}}]);