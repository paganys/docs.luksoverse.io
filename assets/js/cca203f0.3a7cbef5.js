"use strict";(self.webpackChunkcommunity_docs=self.webpackChunkcommunity_docs||[]).push([[6504],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),p=c(n),m=i,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||r;return n?a.createElement(f,s(s({ref:t},u),{},{components:n})):a.createElement(f,s({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,s=new Array(r);s[0]=p;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:i,s[1]=o;for(var c=2;c<r;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},9743:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var a=n(7462),i=(n(7294),n(3905));const r={},s="Set Bruteforce Protection",o={unversionedId:"mainnet/complete-node-guide/system-setup/bruteforce-shield",id:"mainnet/complete-node-guide/system-setup/bruteforce-shield",title:"Set Bruteforce Protection",description:"Brute force protection is a critical aspect of securing blockchain nodes and servers. As these systems often manage valuable assets and sensitive information, they are prime targets for attackers seeking unauthorized access. Brute force attacks involve systematically attempting various combinations of ports, usernames, and passwords to gain access to a target system. Implementing robust security measures on blockchain nodes and servers is essential, so brute force attacks can not target them.",source:"@site/docs/mainnet/complete-node-guide/3-system-setup/07-bruteforce-shield.md",sourceDirName:"mainnet/complete-node-guide/3-system-setup",slug:"/mainnet/complete-node-guide/system-setup/bruteforce-shield",permalink:"/docs/mainnet/complete-node-guide/system-setup/bruteforce-shield",draft:!1,editUrl:"https://github.com/Luksoverse/community-docs/tree/main/packages/create-docusaurus/templates/shared/docs/mainnet/complete-node-guide/3-system-setup/07-bruteforce-shield.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Configure Firewall",permalink:"/docs/mainnet/complete-node-guide/system-setup/firewall-config"},next:{title:"Start here",permalink:"/docs/mainnet/complete-node-guide/router-config/start-here"}},l={},c=[{value:"3.7.1 Install Fail2Ban",id:"371-install-fail2ban",level:3},{value:"3.7.2 Configure Protection Rules",id:"372-configure-protection-rules",level:3},{value:"3.7.3 Start the Fail2Ban Service",id:"373-start-the-fail2ban-service",level:3}],u={toc:c};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"set-bruteforce-protection"},"Set Bruteforce Protection"),(0,i.kt)("p",null,"Brute force protection is a critical aspect of securing blockchain nodes and servers. As these systems often manage valuable assets and sensitive information, they are prime targets for attackers seeking unauthorized access. Brute force attacks involve systematically attempting various combinations of ports, usernames, and passwords to gain access to a target system. Implementing robust security measures on blockchain nodes and servers is essential, so brute force attacks can not target them."),(0,i.kt)("p",null,"While we will later protect our system with key authentication, limiting login attempts and connection is smart. One widely used security tool is called Fail2Ban. It is a security tool that helps protect your system against brute-force attacks and other unauthorized access attempts. It monitors log files for patterns that indicate malicious activities, such as repeated failed login attempts."),(0,i.kt)("p",null,"When such activities are detected, Fail2Ban automatically updates the firewall rules to block the offending IP addresses for a specified duration."),(0,i.kt)("h3",{id:"371-install-fail2ban"},"3.7.1 Install Fail2Ban"),(0,i.kt)("p",null,"First, we need to get the service installed using APT:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"sudo apt install fail2ban\n")),(0,i.kt)("p",null,"After the installation has been successful, we can continue its configuration."),(0,i.kt)("h3",{id:"372-configure-protection-rules"},"3.7.2 Configure Protection Rules"),(0,i.kt)("p",null,"Fail2Ban has its own preset of configurations saved within the ",(0,i.kt)("inlineCode",{parentName:"p"},"/etc/fail2ban/jail.conf")," file. However, if you want to apply custom rules, you can use a separate file: ",(0,i.kt)("inlineCode",{parentName:"p"},"/etc/fail2ban/jail.local"),". The configuration allows you to specify settings for individual services, determine how many failed login attempts should trigger a ban, set the duration of the ban, and define other security measures."),(0,i.kt)("p",null,"Using a separate file for custom configurations is super convenient because it ensures that your changes are preserved when Fail2Ban is updated, as the original will never be modified."),(0,i.kt)("p",null,"Setting properties for the SSH daemon process for the blockchain node is recommended, as it is the only way to access our node. We can do so by defining the ",(0,i.kt)("inlineCode",{parentName:"p"},"[sshd]")," tag and setting ",(0,i.kt)("inlineCode",{parentName:"p"},"enabled=true"),". These are the recommended setting properties:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"port"),": This specifies the port number on which the SSH daemon is listening. Set the opened port number you've configured for SSH on the node."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"filter"),": This option sets the filter for parsing log files and detecting failed login attempts. In our case, the filter should be selected to ",(0,i.kt)("inlineCode",{parentName:"li"},"sshd"),", a predefined filter for the SSH daemon."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"logpath"),": This sets the path to the log file for monitoring failed login attempts. The file typically contains information about authentication events, including failed SSH login attempts. I will set its path to ",(0,i.kt)("inlineCode",{parentName:"li"},"/var/log/auth.log")," as it is the standard location for log files on Unix-based systems. It is designed to store log files generated by various system processes, services, and applications. Placing it in the ",(0,i.kt)("inlineCode",{parentName:"li"},"/var/log/")," directory follows the standard convention. It allows system administrators to quickly locate and manage log files related to different system components in a centralized location."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"maxretry"),": This option sets the maximum number of failed login attempts allowed within the specified period before an IP address gets banned. I prefer ",(0,i.kt)("inlineCode",{parentName:"li"},"3")," tries, a typical number for bankcard payments."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"findtime"),": This option sets the time window in seconds, during which the maximum of failed login attempts can occur before an IP address gets banned. In my case, I set it to ",(0,i.kt)("inlineCode",{parentName:"li"},"300 seconds"),", e.g., ",(0,i.kt)("inlineCode",{parentName:"li"},"5 minutes"),", but you could also reduce the number."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"bantime"),": This option sets the duration in seconds for which an IP address will be banned after exceeding the allowed number of failed login attempts within the ",(0,i.kt)("inlineCode",{parentName:"li"},"findtime")," period. In my case, it's set to ",(0,i.kt)("inlineCode",{parentName:"li"},"28,800 seconds"),", e.g., ",(0,i.kt)("inlineCode",{parentName:"li"},"8 hours")," before the IP address can try again."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"backend"),": This option sets the backend to monitor the specified log file. The service will automatically select the most appropriate backend based on your system's configuration when set to ",(0,i.kt)("inlineCode",{parentName:"li"},"auto"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"ignoreip"),": This option allows you to specify a list of IP addresses or address ranges that should not be banned, even if they exceed the maximum number of allowed failed login attempts. You can add the local IP range ",(0,i.kt)("inlineCode",{parentName:"li"},"127.0.0.1/8")," to prevent accidentally denying your local connections. The ignore rule will also work if you want to set single addresses.")),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"You can also add custom IP addresses to the ",(0,i.kt)("inlineCode",{parentName:"p"},"ignoreip")," property, e.g., allow connections from your VPN service's address range. But remember that people with the same VPN service could still bypass the restrictions.")),(0,i.kt)("p",null,"Open the configuration file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"sudo nano /etc/fail2ban/jail.local\n")),(0,i.kt)("p",null,"Input the properties into the configuration snippet:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"[sshd]\nenabled=true\nport=<desired-port-number>\nfilter=sshd\nlogpath=/var/log/auth.log\nmaxretry=3\nfindtime=300\nbantime=28800\nbackend=auto\nignoreip=127.0.0.1/8\n")),(0,i.kt)("p",null,"Please exchange ",(0,i.kt)("inlineCode",{parentName:"p"},"<desired-port-number>")," with the port number you opened for SSH. You may want to change specific settings to personalize your setup."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"Be cautious: When creating new rules or modifying existing ones, it's essential to follow the correct syntax and structure to ensure that Fail2Ban functions appropriately and provides the desired level of security. Please verify that you do not use spaces between properties and their values.")),(0,i.kt)("h3",{id:"373-start-the-fail2ban-service"},"3.7.3 Start the Fail2Ban Service"),(0,i.kt)("p",null,"First, we need to reload the system manager configuration. It is used when making changes to service configuration files or creating new service files, ensuring that the system daemon service is aware of the changes like before."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"sudo systemctl daemon-reload\n")),(0,i.kt)("p",null,"Afterward, we can start the Fail2Ban service using the system control command."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"sudo systemctl start fail2ban\n")),(0,i.kt)("p",null,"To enable the Fail2Ban service to start automatically when the system boots, we can use the system control to create a symbolic link as we did before."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"sudo systemctl enable fail2ban\n")),(0,i.kt)("p",null,"We can fetch the current status from the system control to check if the Fail2Ban service is running and configured correctly. It will display whether it is active, enabled, or disabled and show any recent log entries."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"sudo systemctl status fail2ban\n")),(0,i.kt)("p",null,"The output should look like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-text"},"\u25cf fail2ban.service - Fail2Ban Service\n     Loaded: loaded (/lib/systemd/system/fail2ban.service; enabled; vendor preset: enabled)\n     Active: active (running) since [DATE]; [TIME] ago\n       Docs: man:fail2ban(1)\n   Main PID: 5875 (fail2ban-server)\n      Tasks: 5 (limit: 38043)\n     Memory: [USED_MEMORY]\n        CPU: [EXECUTION_TIME]\n     CGroup: /system.slice/fail2ban.service\n             \u2514\u25005875 /usr/bin/python3 /usr/bin/fail2ban-server -xf start\n\n[DATE] [USER] systemd[PID]: Started Fail2Ban Service.\n[DATE] [USER] fail2ban-server[PID]: Server ready\n")),(0,i.kt)("p",null,"If everything is alright, we can start configuring the node's network and router settings."))}d.isMDXComponent=!0}}]);